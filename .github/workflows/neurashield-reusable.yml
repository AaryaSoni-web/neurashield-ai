name: NeuraShield Reusable Analysis

on:
  workflow_call:
    secrets:
      OPENAI_API_KEY:
        description: 'OpenAI API key for NeuraShield analysis'
        required: true
    inputs:
      python_version:
        description: 'Python version to use'
        required: false
        type: string
        default: '3.11'
      analysis_type:
        description: 'Type of analysis to run'
        required: false
        type: string
        default: 'all'
      fail_on_critical:
        description: 'Whether to fail on critical issues'
        required: false
        type: boolean
        default: true

jobs:
  neurashield-scan:
    runs-on: ubuntu-latest
    # DO NOT define permissions here - let caller define them
    
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      
      - name: Checkout NeuraShield AI engine
        uses: actions/checkout@v4
        with:
          repository: AaryaSoni-web/neurashield-ai
          path: neurashield-engine
          ref: main
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}
          cache: 'pip'
      
      - name: Install NeuraShield dependencies
        run: |
          pip install --upgrade pip
          pip install -r neurashield-engine/requirements.txt
      
      - name: Initialize ChromaDB vector store
        run: |
          if [ ! -d "neurashield-engine/phase_1/chroma_db" ]; then
            echo "üì¶ ChromaDB not found. Initializing vector store..."
            cd neurashield-engine
            python phase1_pipeline.py
            cd ..
          else
            echo "‚úÖ Using existing ChromaDB"
          fi
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      
      - name: Get changed Python files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            **/*.py
            !.github/**
            !.githooks/**
            !**/test_*.py
            !**/tests/**
      
      - name: Display changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "üîç Changed Python files:"
          echo "${{ steps.changed-files.outputs.all_changed_files }}"
      
      - name: Run NeuraShield AI analysis
        if: steps.changed-files.outputs.any_changed == 'true'
        id: analysis
        run: |
          export PYTHONPATH=${{ github.workspace }}/neurashield-engine:$PYTHONPATH
          cd neurashield-engine
          
          echo "üõ°Ô∏è Running NeuraShield AI analysis..."
          python .github/scripts/pr_analyzer.py ${{ steps.changed-files.outputs.all_changed_files }}
          
          # Move results to workspace root
          if [ -f "pr_analysis_results.json" ]; then
            mv pr_analysis_results.json ${{ github.workspace }}/
          fi
          if [ -f "pr_analysis_report.md" ]; then
            mv pr_analysis_report.md ${{ github.workspace }}/
          fi
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        continue-on-error: true
      
      - name: Post analysis report as PR comment
        if: steps.changed-files.outputs.any_changed == 'true' && always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const reportPath = path.join(process.env.GITHUB_WORKSPACE, 'pr_analysis_report.md');
              
              if (fs.existsSync(reportPath)) {
                const report = fs.readFileSync(reportPath, 'utf8');
                
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: report
                });
                
                console.log('‚úÖ Successfully posted analysis report');
              } else {
                console.log('‚ö†Ô∏è Report file not found');
                
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: '‚ö†Ô∏è NeuraShield AI analysis completed. Check workflow logs for details.'
                });
              }
            } catch (error) {
              console.error('Error posting comment:', error.message);
              throw error;
            }
      
      - name: Check for critical issues
        if: steps.changed-files.outputs.any_changed == 'true' && inputs.fail_on_critical
        run: |
          if [ -f "${{ github.workspace }}/pr_analysis_results.json" ]; then
            cd neurashield-engine
            python .github/scripts/check_critical.py ${{ github.workspace }}/pr_analysis_results.json
          else
            echo "‚ö†Ô∏è No results file, skipping critical check"
          fi
      
      - name: Upload analysis artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: neurashield-analysis-results
          path: |
            pr_analysis_results.json
            pr_analysis_report.md
          retention-days: 30
