name: Reusable NeuraShield Analysis

on:
  workflow_call:
    inputs:
      source-repo:
        description: 'Source repository (owner/repo)'
        required: true
        type: string
      pr-number:
        description: 'Pull request number'
        required: false
        type: number
      issue-number:
        description: 'Issue number'
        required: false
        type: number
    secrets:
      OPENAI_API_KEY:
        description: 'OpenAI API Key for analysis'
        required: true

jobs:
  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    
    # CRITICAL: Permissions block to fix 403 errors
    permissions:
      contents: read
      issues: write
      pull-requests: write
    
    steps:
      - name: Checkout NeuraShield AI
        uses: actions/checkout@v4
        with:
          repository: AaryaSoni-web/neurashield-ai
          path: neurashield-ai
      
      - name: Checkout Source Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.source-repo }}
          path: source-code
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install Dependencies
        working-directory: neurashield-ai
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run NeuraShield Analysis
        working-directory: neurashield-ai
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python src/main.py \
            --source-path ../source-code \
            --output ../neurashield-report.json
      
      # CHANGE 3: Artifact handling with error resilience
      - name: Save Analysis Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: neurashield-report
          path: neurashield-report.json
          retention-days: 30
      
      # CHANGE 4: Robust error handling for comments
      - name: Post Analysis Comment
        uses: actions/github-script@v7
        if: always() && (inputs.pr-number || inputs.issue-number)
        continue-on-error: true
        with:
          script: |
            const fs = require('fs');
            
            // Default message
            let reportBody = '‚ö†Ô∏è Analysis completed. Check workflow logs for details.';
            
            // Try to read report file
            try {
              if (fs.existsSync('neurashield-report.json')) {
                const report = JSON.parse(fs.readFileSync('neurashield-report.json', 'utf8'));
                
                if (report.summary) {
                  reportBody = report.summary;
                } else if (report.findings) {
                  reportBody = `Found ${report.findings.length} potential issues.`;
                }
                
                console.log('‚úÖ Report file loaded successfully');
              } else {
                console.log('‚ö†Ô∏è Report file not found');
              }
            } catch (error) {
              console.error('‚ùå Error reading report:', error.message);
            }
            
            // Determine issue/PR number
            const issue_number = ${{ inputs.pr-number || inputs.issue-number || 'null' }};
            
            if (!issue_number) {
              console.log('‚ÑπÔ∏è No issue/PR number provided, skipping comment');
              return;
            }
            
            // Post comment with error handling
            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: `## üõ°Ô∏è NeuraShield AI Analysis\n\n${reportBody}\n\n---\n*Powered by [NeuraShield AI](https://github.com/AaryaSoni-web/neurashield-ai)*`
              });
              console.log('‚úÖ Comment posted successfully');
            } catch (error) {
              console.error('‚ùå Failed to post comment:', error.message);
              // Don't fail the workflow if comment posting fails
            }
